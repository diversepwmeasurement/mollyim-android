env:
  TAG_NAME: ${{ github.event.inputs.tag_name || github.event.release.tag_name }}
jobs:
  build:
    env:
      CI_ENV_FILE: ${{ vars.CI_ENV_FILE || 'beta-stable.env' }}
      CI_MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
      GRADLE_OPTS: -Dorg.gradle.project.kotlin.compiler.execution.strategy=in-process
    name: Build new
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        ref: ${{ env.TAG_NAME }}
    - continue-on-error: true
      name: Set up builder image
      run: docker-compose build
      working-directory: reproducible-builds
    - continue-on-error: true
      name: Build release
      run: docker-compose --env-file "ci/$CI_ENV_FILE" run assemble
      working-directory: reproducible-builds
    - continue-on-error: true
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: new
        path: reproducible-builds/outputs/apk/*/release/*.apk
    - continue-on-error: true
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: apkdiff
        path: reproducible-builds/apkdiff/apkdiff.py
  compare:
    name: Compare
    needs:
    - build
    - download
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/download-artifact@v3
    - continue-on-error: true
      env:
        SHA256: 60d619373c46a5d06b8126c1d61e0adc18b72f2cbb9245ef920d3387e44b86cf
      name: Install diffuse
      run: 'curl -o diffuse.jar -L https://github.com/JakeWharton/diffuse/releases/download/0.1.0/diffuse-0.1.0-binary.jar

        echo "$SHA256" diffuse.jar | sha256sum -c -

        '
    - continue-on-error: true
      name: Normalize APK filenames
      run: "mv -v new/*/release/*.apk new/\nfor fn in */*-unsigned-*.apk; do\n  mv\
        \ -v \"$fn\" \"$(sed 's/-unsigned-/-/' <<< $fn)\"\ndone\n"
    - continue-on-error: true
      env:
        APK_FILE: ${{ matrix.apk-file }}
      name: Log diffuse full output
      run: java -jar diffuse.jar diff "original/$APK_FILE" "new/$APK_FILE"
    - continue-on-error: true
      env:
        APK_FILE: ${{ matrix.apk-file }}
      name: Check for reproducibility
      run: python apkdiff/apkdiff.py "original/$APK_FILE" "new/$APK_FILE"
    strategy:
      fail-fast: false
      matrix:
        apk-file: ${{ fromJSON(needs.download.outputs.apks) }}
  download:
    name: Download original
    outputs:
      apks: ${{ steps.set.outputs.apks }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      uses: actions/checkout@v3
      with:
        ref: ${{ env.TAG_NAME }}
    - continue-on-error: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      name: Download published APKs
      run: gh release download --pattern '*.apk' "$TAG_NAME"
    - continue-on-error: true
      uses: actions/upload-artifact@v3
      with:
        if-no-files-found: error
        name: original
        path: '*.apk'
    - continue-on-error: true
      id: set
      name: Output filenames to compare
      run: 'apks=$(jq -c -n ''[$ARGS.positional[] | sub("-unsigned-";"-")]'' --args
        *.apk)

        echo "apks=$apks" >> $GITHUB_OUTPUT

        '
name: Reproducible build
on:
  repository_dispatch:
    types: trigger-ga___reprocheck.yml
permissions:
  contents: read
